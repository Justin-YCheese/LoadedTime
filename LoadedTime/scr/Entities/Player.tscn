[gd_scene load_steps=6 format=2]

[ext_resource path="res://Assets/player.png" type="Texture" id=1]
[ext_resource path="res://scr/Entities/Player.cs" type="Script" id=2]
[ext_resource path="res://Assets/coin.png" type="Texture" id=3]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 44, 44 )

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 48, 48 )

[node name="Player" type="KinematicBody2D"]
collision_layer = 2
collision_mask = 5
script = ExtResource( 2 )
groundInputDrag = 0.95
groundNoInputDrag = 0.8
AerialInputDrag = 0.95
AerialNoInputDrag = 0.988
jumpSpeed = 820
rollSpeed = 720
dodgeGravity = 0
coyoteTime = 0.08

[node name="PlayerCollision" type="CollisionShape2D" parent="."]
position = Vector2( 0, -44 )
shape = SubResource( 1 )

[node name="Player" type="Sprite" parent="."]
position = Vector2( 0, -48 )
texture = ExtResource( 1 )

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 0, -160 )
current = true
smoothing_enabled = true
smoothing_speed = 9.0
drag_margin_left = 0.0
drag_margin_top = 0.3
drag_margin_right = 0.0

[node name="EnemyDetector" type="Area2D" parent="."]
collision_layer = 0
collision_mask = 4

[node name="CollisionShape2D" type="CollisionShape2D" parent="EnemyDetector"]
position = Vector2( 0, -48 )
shape = SubResource( 2 )

[node name="RollingDuration" type="Timer" parent="."]
wait_time = 0.4
one_shot = true
__meta__ = {
"_editor_description_": "How long player is in rolling state. Will be returned to Grounded state afterwards."
}

[node name="CoyoteTimeDuration" type="Timer" parent="."]
wait_time = 0.06
one_shot = true

[node name="JumpBuffer" type="Timer" parent="."]
wait_time = 0.06
one_shot = true

[node name="TestLight" type="Light2D" parent="."]
position = Vector2( 0, -48 )
enabled = false
texture = ExtResource( 3 )

[node name="Timer" type="Timer" parent="."]

[connection signal="area_entered" from="EnemyDetector" to="." method="onEnemyDetector_AreaEntered"]
[connection signal="timeout" from="RollingDuration" to="." method="onRollingDuration_TimeOut"]
[connection signal="timeout" from="CoyoteTimeDuration" to="." method="onCoyoteTimeDuration_TimeOut"]
